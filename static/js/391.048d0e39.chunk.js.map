{"version":3,"file":"static/js/391.048d0e39.chunk.js","mappings":"oRAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAc,WAEzB,OADaC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,sCAAmDC,GAEjE,EAEYG,EAAiB,SAAAC,GAI5B,OAHaF,EAAAA,EAAAA,IAAA,UACRH,EADQ,iCACyBC,EADzB,iCACyDI,GAGvE,EAEYC,EAAiB,SAAAC,GAI5B,OAHaJ,EAAAA,EAAAA,IAAA,6CAC2BI,EAD3B,oBAC8CN,EAD9C,mBAId,EAEYO,EAAa,SAAAD,GAGxB,OAFaJ,EAAAA,EAAAA,IAAA,6CAAgDI,EAAhD,4BAA2EN,EAA3E,mBAGd,EAEYQ,EAAY,SAAAF,GAEvB,OADaJ,EAAAA,EAAAA,IAAA,6CAAgDI,EAAhD,4BAA2EN,EAA3E,0BAEd,C,sKC/BYS,EAAgBC,EAAAA,GAAAA,IAAH,8FAMbC,EAAaD,EAAAA,GAAAA,KAAH,2eA4BVE,EAAaF,EAAAA,GAAAA,GAAH,0O,SC4BvB,EA3De,WACb,OAA0BG,EAAAA,EAAAA,UAAS,IAAnC,eAAOT,EAAP,KAAcU,EAAd,KAEA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAOF,EAAaG,IAAI,QAuB9B,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,qGACKtB,EAAAA,EAAAA,IAAemB,GADpB,OACZI,EADY,OAElBV,EAAUU,EAASC,KAAKC,SACxBC,QAAQC,IAAIJ,EAASC,KAAKC,SAHR,2CAAH,qDAKbN,GACFG,GAEH,GAAE,CAACH,KAGF,UAACb,EAAD,YACE,2CACA,UAACE,EAAD,CAAYoB,SApBK,SAAAC,GACnBA,EAAIC,iBACJZ,EAAgB,CAAEC,KAAMlB,IACxBU,EAAS,GACV,EAgBG,WACE,kBACEQ,KAAK,QACLY,MAAO9B,EACP+B,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBACZC,SAhCkB,SAAAP,GACxBlB,EAASkB,EAAIQ,OAAON,MACrB,KAgCK,mBAAQC,KAAK,SAAb,wBAEF,SAACvB,EAAD,UACGG,EAAO0B,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAM3B,GAAY4B,GAAE,kBAAaH,EAAMI,IAAtD,SACGJ,EAAMK,OAASL,EAAMpB,QAFjBoB,EAAMI,GADA,QAUxB,C","sources":["API.js","styles/Movies.styled.jsx","components/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b548e18956509bbab355422895e2e3b8';\n\nexport const getTrending = () => {\n  const data = axios.get(`${BASE_URL}/trending/all/week?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getSearchMovie = query => {\n  const data = axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n  return data;\n};\n\nexport const getFilmDetails = movieId => {\n  const data = axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getTheCast = movieId => {\n  const data = axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getReview = movieId => {\n  const data = axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n  return data;\n};\n","import styled from 'styled-components';\n\nexport const MoviesWrapper = styled.div`\n  padding: 20px;\n  background-color: #f0f0f0;\n  min-height: 100vh;\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n\n  button {\n    background-color: #2196f3;\n    border: none;\n    border-radius: 5px;\n    color: #fff;\n    cursor: pointer;\n    font-size: 16px;\n    font-weight: bold;\n    padding: 10px 20px;\n    margin-left: 10px;\n  }\n\n  input {\n    border: none;\n    border-radius: 5px;\n    font-size: 16px;\n    padding: 10px;\n    margin-right: 10px;\n    flex: 1;\n  }\n`;\n\nexport const MoviesList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n\n  li {\n    margin-bottom: 10px;\n  }\n\n  a {\n    color: #000;\n    text-decoration: none;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;","import { useState, useEffect } from 'react';\nimport { getSearchMovie } from 'API';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { MoviesWrapper, SearchForm, MoviesList } from 'styles/Movies.styled';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n\n  const [movies, setMovies] = useState([]);\n\n  const location = useLocation();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const name = searchParams.get('name');\n\n  const handleInputChange = evt => {\n    setQuery(evt.target.value);\n  };\n\n  const handleSearch = evt => {\n    evt.preventDefault();\n    setSearchParams({ name: query });\n    setQuery('');\n  };\n\n  useEffect(() => {\n    const requestFunc = async () => {\n      const response = await getSearchMovie(name);\n      setMovies(response.data.results);\n      console.log(response.data.results);\n    };\n    if (name) {\n      requestFunc();\n    }\n  }, [name]);\n\n  return (\n    <MoviesWrapper>\n      <h1>Search movies</h1>\n      <SearchForm onSubmit={handleSearch}>\n        <input\n          name=\"query\"\n          value={query}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Enter movie name\"\n          onChange={handleInputChange}\n        />\n        <button type=\"submit\">Search</button>\n      </SearchForm>\n      <MoviesList>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link state={{ from: location }} to={`/movies/${movie.id}`}>\n              {movie.title || movie.name}\n            </Link>\n          </li>\n        ))}\n      </MoviesList>\n    </MoviesWrapper>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","getTrending","axios","getSearchMovie","query","getFilmDetails","movieId","getTheCast","getReview","MoviesWrapper","styled","SearchForm","MoviesList","useState","setQuery","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","name","get","useEffect","requestFunc","response","data","results","console","log","onSubmit","evt","preventDefault","value","type","autoComplete","autoFocus","placeholder","onChange","target","map","movie","state","from","to","id","title"],"sourceRoot":""}