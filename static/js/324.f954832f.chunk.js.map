{"version":3,"file":"static/js/324.f954832f.chunk.js","mappings":"oRAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAc,WAEzB,OADaC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,sCAAmDC,GAEjE,EAEYG,EAAiB,SAAAC,GAI5B,OAHaF,EAAAA,EAAAA,IAAA,UACRH,EADQ,iCACyBC,EADzB,iCACyDI,GAGvE,EAEYC,EAAiB,SAAAC,GAI5B,OAHaJ,EAAAA,EAAAA,IAAA,6CAC2BI,EAD3B,oBAC8CN,EAD9C,mBAId,EAEYO,EAAa,SAAAD,GAGxB,OAFaJ,EAAAA,EAAAA,IAAA,6CAAgDI,EAAhD,4BAA2EN,EAA3E,mBAGd,EAEYQ,EAAY,SAAAF,GAEvB,OADaJ,EAAAA,EAAAA,IAAA,6CAAgDI,EAAhD,4BAA2EN,EAA3E,0BAEd,C,0LC9BYS,EAAUC,EAAAA,GAAAA,IAAH,kFAMPC,GAAWD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,iLAURG,EAAiBH,EAAAA,GAAAA,IAAH,mHAOdI,EAAaJ,EAAAA,GAAAA,IAAH,+CAIVK,EAAYL,EAAAA,GAAAA,IAAH,oCAITM,EAAQN,EAAAA,GAAAA,GAAH,sEAKLO,EAASP,EAAAA,GAAAA,EAAH,sEAKNQ,EAAWR,EAAAA,GAAAA,GAAH,sEAKRS,EAAST,EAAAA,GAAAA,GAAH,wEAKNU,EAAYV,EAAAA,GAAAA,EAAH,sEAKTW,EAAiBX,EAAAA,GAAAA,IAAH,6CAIdY,EAAYZ,EAAAA,GAAAA,GAAH,4FAOTa,EAAWb,EAAAA,GAAAA,GAAH,+C,SCDrB,EAlDqB,WAAO,IAAD,MACzB,GAA0Bc,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQpB,GAAYqB,EAAAA,EAAAA,MAAZrB,QAEFsB,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,qGACK1B,EAAAA,EAAAA,IAAeC,GADpB,OACZ0B,EADY,OAElBN,EAASM,EAASC,MAFA,2CAAH,qDAIjBF,GACD,GAAE,CAACzB,IAEJ,IAAM4B,GAAWC,EAAAA,EAAAA,QAAM,oBAACP,EAASQ,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAEhD,OACE,UAAC5B,EAAD,YACE,SAACE,EAAD,CAAU2B,GAAIJ,EAASK,QAAvB,2BACA,UAAC1B,EAAD,YACE,SAACC,EAAD,CACE0B,IAAG,yCAAoCf,EAAMgB,aAC7CC,IAAI,MAEN,UAAC3B,EAAD,YACE,SAACC,EAAD,UAAQS,EAAMkB,kBACd,SAAC1B,EAAD,UAASQ,EAAMmB,gBACf,SAAC1B,EAAD,wBACA,uBAAIO,EAAMoB,YACV,SAAC1B,EAAD,sBACA,SAACC,EAAD,oBAAYK,EAAMqB,cAAlB,aAAY,EAAcC,KAAI,SAAAC,GAAK,gBAAOA,EAAMC,KAAb,iBAGvC,SAAC5B,EAAD,WACE,UAACC,EAAD,YACE,SAACC,EAAD,WACE,SAAC,KAAD,CAAMe,GAAE,OAAR,qBAEF,SAACf,EAAD,WACE,SAAC,KAAD,CAAMe,GAAE,UAAR,6BAIN,SAAC,EAAAY,SAAD,CAAUC,UAAU,6CAApB,UACE,SAAC,KAAD,QAIP,C","sources":["API.js","styles/MovieDetails.styled.jsx","components/pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b548e18956509bbab355422895e2e3b8';\n\nexport const getTrending = () => {\n  const data = axios.get(`${BASE_URL}/trending/all/week?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getSearchMovie = query => {\n  const data = axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n  return data;\n};\n\nexport const getFilmDetails = movieId => {\n  const data = axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getTheCast = movieId => {\n  const data = axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getReview = movieId => {\n  const data = axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n  return data;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n`;\n\nexport const BackLink = styled(Link)`\n  background-color: #1c1c1c;\n  color: #fff;\n  font-size: 16px;\n  border: none;\n  border-radius: 5px;\n  padding: 10px 20px;\n  margin-bottom: 50px;\n`;\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 2rem;\n  margin-top: 20px;\n`;\n\nexport const MovieImage = styled.img`\n  margin-right: 2rem;\n`;\n\nexport const MovieInfo = styled.div`\n  flex: 1;\n`;\n\nexport const Title = styled.h1`\n  font-size: 3rem;\n  margin-bottom: 0.5rem;\n`;\n\nexport const Rating = styled.p`\n  font-size: 1.5rem;\n  margin-bottom: 1rem;\n`;\n\nexport const Overview = styled.h2`\n  font-size: 2rem;\n  margin-bottom: 0.5rem;\n`;\n\nexport const Genres = styled.h3`\n  font-size: 1.5rem;\n  margin-bottom: 0.5rem;\n`;\n\nexport const GenreList = styled.p`\n  font-size: 1.2rem;\n  margin-bottom: 1rem;\n`;\n\nexport const LinksContainer = styled.div`\n  margin-top: 2rem;\n`;\n\nexport const LinksList = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const LinkItem = styled.li`\n  margin-right: 2rem;\n`;\n","import { Link, useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useEffect, useRef, useState, Suspense } from 'react';\nimport { getFilmDetails } from 'API';\nimport {\n  Wrapper,\n  BackLink,\n  MovieContainer,\n  MovieImage,\n  MovieInfo,\n  Title,\n  Rating,\n  Overview,\n  Genres,\n  GenreList,\n  LinksContainer,\n  LinksList,\n  LinkItem,\n} from 'styles/MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const requestFunc = async () => {\n      const response = await getFilmDetails(movieId);\n      setMovie(response.data);\n    };\n    requestFunc();\n  }, [movieId]);\n\n  const position = useRef(location.state?.from ?? '/');\n\n  return (\n    <Wrapper>\n      <BackLink to={position.current}>Back to list</BackLink>\n      <MovieContainer>\n        <MovieImage\n          src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n          alt=\"\"\n        />\n        <MovieInfo>\n          <Title>{movie.original_title}</Title>\n          <Rating>{movie.vote_average}</Rating>\n          <Overview>Overview</Overview>\n          <p>{movie.overview}</p>\n          <Genres>Genres</Genres>\n          <GenreList>{movie.genres?.map(genre => `${genre.name} `)}</GenreList>\n        </MovieInfo>\n      </MovieContainer>\n      <LinksContainer>\n        <LinksList>\n          <LinkItem>\n            <Link to={`cast`}>Cast</Link>\n          </LinkItem>\n          <LinkItem>\n            <Link to={`reviews`}>Reviews</Link>\n          </LinkItem>\n        </LinksList>\n      </LinksContainer>\n      <Suspense fallback={<div>Loading page...</div>}>\n        <Outlet />\n      </Suspense>\n    </Wrapper>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","getTrending","axios","getSearchMovie","query","getFilmDetails","movieId","getTheCast","getReview","Wrapper","styled","BackLink","Link","MovieContainer","MovieImage","MovieInfo","Title","Rating","Overview","Genres","GenreList","LinksContainer","LinksList","LinkItem","useState","movie","setMovie","useParams","location","useLocation","useEffect","requestFunc","response","data","position","useRef","state","from","to","current","src","poster_path","alt","original_title","vote_average","overview","genres","map","genre","name","Suspense","fallback"],"sourceRoot":""}